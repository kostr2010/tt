[2019-11-26|02:21:14]
passed through function [[TreeInit]]
  hash: 0
  tree capacity: 10
  tree size: 0
  first free element's physical address: 1
  root address: 0
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (  0 [  0,   0,   0] <  0>)
  [  2] (  0 [  0,   0,   0] <  0>)
  [  3] (  0 [  0,   0,   0] <  0>)
  [  4] (  0 [  0,   0,   0] <  0>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeSort]]
  hash: 0
  tree capacity: 10
  tree size: 0
  first free element's physical address: 1
  root address: 0
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (  0 [  0,   0,   0] <  0>)
  [  2] (  0 [  0,   0,   0] <  0>)
  [  3] (  0 [  0,   0,   0] <  0>)
  [  4] (  0 [  0,   0,   0] <  0>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 1
  first free element's physical address: 2
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  0,   0,   0] <  0>)
  [  2] (  0 [  0,   0,   0] <  0>)
  [  3] (  0 [  0,   0,   0] <  0>)
  [  4] (  0 [  0,   0,   0] <  0>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 2
  first free element's physical address: 3
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   0,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] (  0 [  0,   0,   0] <  0>)
  [  4] (  0 [  0,   0,   0] <  0>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 3
  first free element's physical address: 4
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  0,   0,   0] <  1>)
  [  4] (  0 [  0,   0,   0] <  0>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 4
  first free element's physical address: 5
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  0,   0,   0] <  3>)
  [  5] (  0 [  0,   0,   0] <  0>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 5
  first free element's physical address: 6
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   0,   0] <  4>)
  [  6] (  0 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeAddNode (branch occupied)]]
  hash: 0
  tree capacity: 10
  tree size: 6
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  4,   0,   0] <  1>)
  [  4] ( 97 [  5,   0,   0] <  3>)
  [  5] ( 96 [  0,   6,   0] <  4>)
  [  6] ( 96 [  0,   0,   0] <  5>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
[2019-11-26|02:21:14]
passed through function [[TreeDeleteNode]]
  hash: 0
  tree capacity: 10
  tree size: 2
  first free element's physical address: 7
  root address: 1
  rank: 2
  error: 0 tree is ok

  [  0] (  0 [  0,   0,   0] <  0>)
  [  1] (100 [  2,   3,   0] <  0>)
  [  2] ( 99 [  0,   0,   0] <  1>)
  [  3] ( 98 [  0,   0,   0] <  0>)
  [  4] ( 97 [  0,   0,   0] <  0>)
  [  5] ( 96 [  0,   0,   0] <  0>)
  [  6] ( 96 [  0,   0,   0] <  0>)
  [  7] (  0 [  0,   0,   0] <  0>)
  [  8] (  0 [  0,   0,   0] <  0>)
  [  9] (  0 [  0,   0,   0] <  0>)
